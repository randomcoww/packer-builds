{
  "variables": {
    "user": "randomcoww",
    "uid": "10000",
    "password": "password",
    "hostname": "docker01",
    "domain": "static.local",
    "search": "static.local dyn.local",
    "chef_environment": "testing",
    "encrypted_data_bag_secret_path": "/etc/chef/encrypted_data_bag_secret",
    "server_url": "https://api.opscode.com/organizations/madcoww",
    "validation_key_path": "/etc/chef/madcoww-validator.pem",
    "validation_client_name": "madcoww-validator",
    "timezone": "Etc/UTC",
    "static_ip_f": "192.168.63.241",
    "netmask_f": "255.255.254.0",
    "static_ip_b": "169.254.63.241",
    "netmask_b": "255.255.0.0",
    "gateway_ip": "192.168.62.241"
  },
  "builders": [
    {
      "name": "{{user `hostname`}}",

      "type": "qemu",
      "format": "raw",
      "accelerator": "kvm",

      "iso_url": "http://cdimage.debian.org/cdimage/weekly-builds/amd64/iso-cd/debian-testing-amd64-netinst.iso",
      "iso_checksum": "53eaad7a9121d513db1f8d9c679bc91bc7c3355d8b17789255002be954bb9b1f",
      "iso_checksum_type": "sha256",

      "http_directory": "http",
      "disk_size": 20000,

      "ssh_username": "root",
      "ssh_key_path": "files/packer.key",
      "ssh_wait_timeout": "600s",
      "shutdown_command": "shutdown -P now",
      "output_directory": "/tmp/packer_build_qemu",

      "disk_interface": "scsi",
      "boot_wait": "2s",
      "qemuargs": [
        [ "-display", "none" ],
        [ "-m", "1024M" ]
      ],
      "boot_command": [
        "<esc><wait><wait>",
	"install auto ",
        "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed-debian.cfg ",
        "debian-installer=en_US locale=en_US keymap=us ",
 
        "hostname={{user `hostname`}} ",
        "time/zone={{user `timezone`}} ",
        "netcfg/get_hostname={{user `hostname`}} ",
        "netcfg/get_domain={{user `domain`}} ",

        "fb=false debconf/frontend=noninteractive ",

        "passwd/username={{user `user`}} ",
        "passwd/user-fullname={{user `user`}} ",
        "passwd/user-uid={{user `uid`}} ",
        "passwd/user-password-again={{user `password`}} ",
        "passwd/user-password={{user `password`}} ",

        "initrd=/install/initrd.gz -- console=ttyS0,115200n8 <enter>"
      ]
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "apt-get -y install curl wget git cgroup-bin nfs-client avahi-autoipd bridge-utils",
        "mkdir /etc/chef"
      ]
    },
    {
      "type": "chef-solo",
      "cookbook_paths": ["cookbooks"],
      "json": {
        "network_interfaces": {
          "ens2": {
            "bootproto": "manual",
            "reload": false
          },
          "ens3": {
            "bootproto": "manual",
            "reload": false
          },
          "br0": {
            "bootproto": "static",
            "bridge_ports": [ "ens2" ],
            "address": "{{user `static_ip_f`}}",
            "netmask": "{{user `netmask_f`}}",
	    "gateway": "{{user `gateway_ip`}}",
            "reload": false
          },
          "br1": {
            "bootproto": "static",
            "bridge_ports": [ "ens3" ],
            "address": "{{user `static_ip_b`}}",
            "netmask": "{{user `netmask_b`}}",
            "reload": false
          }
        },
        "resolver": {
          "nameservers": ["{{user `static_ip_f`}}", "{{user `gateway_ip`}}"],
          "domain": "{{user `domain`}}",
          "search": "{{user `search`}}",
          "options": {
            "timeout": 2
          }
	}
      },
      "run_list": [
        "recipe[ntp]",
	"recipe[resolver]",
        "recipe[docker_wrapper::service]",
        "recipe[network_interfaces_wrapper::module_hack]",
        "recipe[network_interfaces_wrapper::debian]"
      ],
      "staging_directory": "/etc/chef"
    },
    {
      "type": "file",
      "source": "{{user `encrypted_data_bag_secret_path` }}",
      "destination": "/etc/chef/encrypted_data_bag_secret"
    },
    {
      "type": "chef-client",
      "skip_install": true,
      "server_url": "{{user `server_url`}}",
      "chef_environment": "{{user `chef_environment`}}",
      "prevent_sudo": true,
      "node_name": "{{user `hostname`}}",
      "skip_clean_node": true,
      "skip_clean_client": true,
      "config_template": "files/config_template",
      "validation_client_name": "{{user `validation_client_name`}}",
      "validation_key_path": "{{user `validation_key_path`}}",
      "json": {
        "chef_client": {
          "daemon_options": ["-E", "{{user `chef_environment`}}"],
          "config": {
            "node_name": "{{user `hostname`}}"
          }
        }
      },
      "run_list": [
        "recipe[ntp]",
        "recipe[chef-client::systemd_service]",
        "recipe[chef-client::config]"
      ]
    },
    {
      "type": "shell",
      "inline": ["rm /root/.ssh/authorized_keys"]
    }
  ]
}
